<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tr.coalgas.dao.depot.bound.IOutBoundDao">
	<resultMap id="BaseResultMap" type="cn.tr.coalgas.entity.OutBound">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="depot_id" jdbcType="INTEGER" property="depotId" />
		<result column="furnace_id" jdbcType="INTEGER" property="furnaceId" />
		<result column="amount" jdbcType="DOUBLE" property="amount" />
		<result column="unit_price" jdbcType="DOUBLE" property="unitPrice" />
		<result column="total_price" jdbcType="DOUBLE" property="totalPrice" />
		<result column="comfirm_person" jdbcType="VARCHAR" property="comfirmPerson" />
		<result column="outbound_date" jdbcType="TIMESTAMP" property="outboundDate" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />

		<result column="name" property="name" />
		<result column="place" property="place" />

	</resultMap>

	<sql id="Base_Column_List">
		id, depot_id, furnace_id, amount, unit_price, total_price,
		comfirm_person, outbound_date, remark
	</sql>

	<select id="selectById" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from outbound
		where id = #{id,jdbcType=INTEGER}
	</select>

	<select id="selectList" parameterType="cn.tr.coalgas.entity.InBound"
		resultMap="BaseResultMap">
		select t1.*, t2.name name, t2.place place
		from outbound t1
		left join depot t2 on t1.depot_id = t2.id
		<where>
			<if test="option1 == '今天'">
				TO_DAYS(DATE_ADD(t1.outbound_date, INTERVAL 13 HOUR)) = TO_DAYS(NOW())
			</if>
			<if test="option1 == '昨天'">
				TO_DAYS(DATE_ADD(t1.outbound_date, INTERVAL 13 HOUR)) = TO_DAYS(NOW()) - 1
			</if>
			<!-- 获取所在周的周一至周日数据，由于默认每周从周日开始，解决方法: 数据减1天 -->
			<if test="option1 == '本周'">
				YEARWEEK(DATE_FORMAT(DATE_SUB(t1.outbound_date, INTERVAL 11 HOUR),'%Y-%m-%d')) = YEARWEEK(DATE_SUB(NOW(), INTERVAL
				1 DAY))
			</if>
			<if test="option1 == '上周'">
				YEARWEEK(DATE_FORMAT(DATE_SUB(t1.outbound_date, INTERVAL 11 HOUR),'%Y-%m-%d')) = YEARWEEK(DATE_SUB(NOW(), INTERVAL
				1 DAY)) - 1
			</if>
			<if test="option1 == '当月'">
				DATE_FORMAT(DATE_ADD(t1.outbound_date, INTERVAL 13 HOUR),'%Y-%m') = DATE_FORMAT(NOW(),'%Y-%m')
			</if>
			<if test="option1 == '上月'">
				DATE_FORMAT(DATE_ADD(t1.outbound_date, INTERVAL 13 HOUR),'%Y-%m') = DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1
				MONTH),'%Y-%m')
			</if>
			<if test="option1 == '本季度'">
				QUARTER(DATE_ADD(t1.outbound_date, INTERVAL 13 HOUR)) = QUARTER(now())
			</if>
			<if test="option1 == '上季度'">
				QUARTER(DATE_ADD(t1.outbound_date, INTERVAL 13 HOUR)) = QUARTER(now()) - 1
			</if>
			<if test="option1 == '今年'">
				YEAR(DATE_ADD(t1.outbound_date, INTERVAL 13 HOUR)) = YEAR(NOW())
			</if>
			<if test="option1 == '去年'">
				YEAR(DATE_ADD(t1.outbound_date, INTERVAL 13 HOUR)) = YEAR(NOW()) - 1
			</if>
			<if test="option1 == '去年以前'">
				YEAR(DATE_ADD(t1.outbound_date, INTERVAL 13 HOUR)) &lt; YEAR(NOW()) - 1
			</if>
			<if test="option2 == '高等'">
				and t2.name = '高等原煤'
			</if>
			<if test="option2 == '中等'">
				and t2.name = '中等原煤'
			</if>
			<if test="option2 == '低等'">
				and t2.name = '低等原煤'
			</if>
			<if test="option2 == '正常'">
				and (t1.remark is null or t1.remark = '')
			</if>
			<if test="option2 == '异常'">
				and t1.remark is not null and t1.remark != ''
			</if>
			<if test="searchText != null">
				and (
				t1.depot_id = #{searchText} or
				CONCAT("F",furnace_id) =
				#{searchText} or
				t1.comfirm_person like CONCAT('%',#{searchText},'%')
				or
				DATE_FORMAT(DATE_ADD(t1.outbound_date,INTERVAL 13 HOUR),"%Y") =
				#{searchText} or
				DATE_FORMAT(DATE_ADD(t1.outbound_date,INTERVAL 13
				HOUR),"%Y-%m") = #{searchText} or
				DATE_FORMAT(DATE_ADD(t1.outbound_date,INTERVAL 13 HOUR),"%Y-%m-%d")
				= #{searchText} or
				t2.name like CONCAT('%',#{searchText},'%') or
				t2.place like CONCAT('%',#{searchText},'%')
				)
			</if>
			<if test="id != null">
				and t1.depot_id = #{id}
			</if>
		</where>
		order by t1.outbound_date desc;
	</select>

	<delete id="deleteById" parameterType="java.lang.Integer">
		delete from outbound
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<insert id="insert" parameterType="cn.tr.coalgas.entity.OutBound">
		insert into outbound (id, depot_id, furnace_id,
		amount, unit_price, total_price,
		comfirm_person, outbound_date, remark
		)
		values (#{id,jdbcType=INTEGER}, #{depotId,jdbcType=INTEGER},
		#{furnaceId,jdbcType=INTEGER},
		#{amount,jdbcType=DOUBLE}, #{unitPrice,jdbcType=DOUBLE}, #{totalPrice,jdbcType=DOUBLE},
		#{comfirmPerson,jdbcType=VARCHAR}, #{outboundDate,jdbcType=TIMESTAMP},
		#{remark,jdbcType=VARCHAR}
		)
	</insert>

	<update id="updateById" parameterType="cn.tr.coalgas.entity.OutBound">
		update outbound
		<set>
			<if test="depotId != null">
				depot_id = #{depotId,jdbcType=INTEGER},
			</if>
			<if test="furnaceId != null">
				furnace_id = #{furnaceId,jdbcType=INTEGER},
			</if>
			<if test="amount != null">
				amount = #{amount,jdbcType=DOUBLE},
			</if>
			<if test="unitPrice != null">
				unit_price = #{unitPrice,jdbcType=DOUBLE},
			</if>
			<if test="totalPrice != null">
				total_price = #{totalPrice,jdbcType=DOUBLE},
			</if>
			<if test="comfirmPerson != null">
				comfirm_person = #{comfirmPerson,jdbcType=VARCHAR},
			</if>
			<if test="outboundDate != null">
				outbound_date = #{outboundDate,jdbcType=TIMESTAMP},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

</mapper>